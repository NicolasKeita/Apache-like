
os: linux and windows
language: cpp
jobs:
  include:
    - os: linux
      dist: bionic # Ubuntu version 18.04.3 LTS
      compiler: gcc
      before_install:
        # Install gcc v9
        - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        - sudo apt-get -q update
        - sudo apt-get -y install gcc-9 g++-9
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
        # Conan installation
        - pyenv global $(pyenv whence 2to3)
        - python3 -m pip install --user --upgrade conan
        - conan user
        - conan profile new default --detect
        - conan profile update settings.compiler.libcxx=gcc default
        - conan profile update settings.compiler.libcxx=libstdc++11 default
        - conan profile update settings.compiler.version=9 default
        - conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan

    - os: windows
      compiler: msvc
      before_install:
        # python and conan installation
        - choco install python3 --params "/InstallDir:C:\\Python"
        - choco install -y visualstudio2019community visualstudio2019-workload-nativedesktop
        - export PATH="/c/Python:/c/Python/Scripts:/c/Users/travis/AppData/Roaming/Python/Python38/Scripts:$PATH"
        - pip3 install --user --upgrade conan
        - conan user
        - conan profile new default --detect
        - conan profile remove settings.compiler.libcxx default
        - conan profile update settings.compiler="Visual Studio" default
        - conan profile update settings.compiler.version=16 default # Visual Studio 2019
        - conan profile update settings.compiler.cppstd=20 default
        - conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan

install:
  # This will install the last version of Cmake
  #
  # first we create a directory for the CMake binaries
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  # we use wget to fetch the cmake binaries
  - travis_retry wget --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.0-Linux-x86_64.tar.gz
  # extract the binaries; the output here is quite lengthy,
  # so we swallow it to not clutter up the travis console
  - tar -xvf cmake-3.16.0-Linux-x86_64.tar.gz > /dev/null
  - mv cmake-3.16.0-Linux-x86_64 cmake-install
  # add both the top-level directory and the bin directory from the archive
  # to the system PATH. By adding it to the front of the path we hide the
  # preinstalled CMake with our own.
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  # don't forget to switch back to the main build directory once you are done
  - cd ${TRAVIS_BUILD_DIR}

before_script:
  - mkdir -p ./build/
  - cd ./build/
  - conan install ../ --build=missing -s build_type=Release
  - sed -i 's/read/read -r/g' activate.sh # to fix a little mistake in the .sh from Conan
  - source activate.sh
  - cmake -DCMAKE_BUILD_TYPE=Release ../

script:
  - cmake --build ./

  #run tests on network library
  - cd ../lib/libmy_parsers/
  - mkdir -p ./build/
  - cd ./build/
  - cmake ../
  - cmake --build ./
  - ctest -C Debug

